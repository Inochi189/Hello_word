Списки:
1)Ваша цель — реализовать разностную функцию, которая вычитает один список из другого и возвращает результат.

Он должен удалить все значения из списка a, которые присутствуют в списке b, сохраняя их порядок.

array_diff([1,2],[1]) == [2]
Если значение присутствует в b, все его вхождения должны быть удалены из другого:

array_diff([1,2,2,2,3],[2]) == [1,3]
2)Дан список целых чисел, определить, является ли сумма его элементов четной или нечетной.

Дайте ответ в виде строки, соответствующей «нечетному» или «четному».

Если входной массив пуст, рассматривайте его как: [0] (массив с нулем).

Примеры:
Ввод: [0]
Вывод: "четная"

Ввод: [0, 1, 4]
Вывод: "нечетная"

Ввод: [0, -1, -5]
Вывод: "четная"

3)Вы должны, учитывая строку, заменить каждую букву ее позицией в алфавите.

Если что-то в тексте не является буквой, игнорируйте это и не возвращайте.

«a» = 1, «b» = 2 и т. д.

Пример
Alphabet_position("The sunset sets at twelve o' clock.")
Должен вернуть "20 8 5 19 21 14 19 5 20 19 5 20 19 1 20 20 23 5 12 22 5 15 3 12 15 3 11" (в виде строки)
Словари:
4) На вход дан список целых чисел. 
Цель - сформировать словарь, в котором:
- ключами будут различные неповторяющиеся числа из этого списка, отсортированные по возврастанию
- значениями будут являться кол-во повторений в этом списке

Ввод: [0, 1, 0, 3, 2, 0]
Вывод: {
	0: 3,
	1: 1,
	2: 1,
	3: 1,
}
5) На вход дан словарь, в котором НЕКОТОРЫЕ ключи - строки в snake_case. 
Цель - создать словарь, в котором ключи будут переведены в camelCase. 

Ввод: {'one_value': 1, '2': 2, 'three_value': 'three'}
Вывод: {'oneValue': 1, '2': 2, 'threeValue': 'three'}
